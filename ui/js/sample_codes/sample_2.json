{
  "text": "\nwindow.onload = function () {\n  drawCircles(10)\n}\n\nfunction onClickRender () {\n  let select = document.getElementById('select')\n  let value = select.value\n  drawCircles(Number(value))\n}\n\nfunction onClickDownload () {\n  let canvas = document.getElementById('canvas')\n  let dataUrl = canvas.toDataURL('image/jpeg')\n  if (!dataUrl.startsWith('data:image/jpeg')) {\n    console.error('not jpeg!')\n  }\n\n  let link = document.createElement('a')\n  link.href = dataUrl\n  link.download = 'hoge.jpg'\n  link.click()\n}\n\nfunction drawCircles (number) {\n  let canvas = document.getElementById('canvas')\n  let ctx = canvas.getContext('2d')\n\n  let width = 400\n  let height = 300\n  let maxRadius = 50\n  let minRadius = 10\n  let circles = makeCircles(number, width, height, maxRadius, minRadius)\n\n  ctx.clearRect(0, 0, width, height)\n  ctx.fillStyle = '#fff'\n  ctx.fillRect(0, 0, width, height)\n\n  for (let i = 0; i < circles.length; i++) {\n    draw(ctx, circles[i])\n  }\n}\n\nfunction draw (ctx, circle) {\n  ctx.beginPath()\n  ctx.arc(circle.cood.x, circle.cood.y, circle.radius, 0, Math.PI * 2, false)\n  ctx.fillStyle = circle.color\n  ctx.fill()\n}\n\nfunction distance (cood1, cood2) {\n  let dx = cood1.x - cood2.x\n  let dy = cood1.y - cood2.y\n  return Math.sqrt(dx * dx + dy * dy)\n}\n\nfunction hasIntersect (circle1, circle2) {\n  let centerDistance = distance(circle1.cood, circle2.cood)\n  return circle1.radius + circle2.radius > centerDistance\n}\n\nfunction random (lower, upper) {\n  return Math.random() * (upper - lower) + lower\n}\n\nfunction randomCircle (width, height, maxRadius, minRadius) {\n  let x = random(maxRadius, width - maxRadius)\n  let y = random(maxRadius, height - maxRadius)\n  let radius = random(minRadius, maxRadius)\n  let color = 'hsl(' + random(0, 360) + ', ' + random(40, 60) + '%, ' + random(30, 70) + '%)'\n  return {\n    radius,\n    color,\n    cood: {\n      x, y\n    },\n  }\n}\n\nfunction makeCircles (number, width, height, maxRadius, minRadius) {\n  let circles = []\n  while (circles.length < number) {\n    let circle = randomCircle(width, height, maxRadius, minRadius)\n    let ok = true\n    for (let j = 0; j < circles.length; j++) {\n      if (hasIntersect(circles[j], circle)) {\n        ok = false\n        break\n      }\n    }\n    if (ok) {\n      circles.push(circle)\n    }\n  }\n  return circles\n}",
  "language": "js"
}
